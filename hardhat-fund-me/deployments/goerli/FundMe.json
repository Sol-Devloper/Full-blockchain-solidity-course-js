{
  "address": "0x43bf8Ee162642584B43211E7Ce4E70eCA353241e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funders",
          "type": "address"
        }
      ],
      "name": "getFundersAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x478c95347cb3cd9941361e100ebe89410ee3c63f1d9c969c1e29e89fe74938fe",
  "receipt": {
    "to": null,
    "from": "0x17E1EbC1d6BCFDa760Af68e1eE7ab0dD7f577cF4",
    "contractAddress": "0x43bf8Ee162642584B43211E7Ce4E70eCA353241e",
    "transactionIndex": 16,
    "gasUsed": "1059343",
    "logsBloom": "0x
    "blockHash": "0xbddffe066474a4fbba9278e11fb403aaeef44cfd28d1b5b1a20a83b3938b5292",
    "transactionHash": "0x478c95347cb3cd9941361e100ebe89410ee3c63f1d9c969c1e29e89fe74938fe",
    "logs": [],
    "blockNumber": 8454039,
    "cumulativeGasUsed": "7990060",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "e0abe1319dee14bdcf851cb358858a8e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funders\",\"type\":\"address\"}],\"name\":\"getFundersAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"BlockHunt\",\"details\":\"This implement price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This function allows users to fund\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds the contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n//pragma version\\n\\n//imports\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//error messages\\nerror FundMe__NotOwner();\\n\\n//interfaces, libraries, contracts\\n\\n/** @title A contract for crowd funding\\n *  @author BlockHunt\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev  This implement price feeds as our library\\n */\\n\\ncontract FundMe {\\n    //type Declarations\\n    using PriceConverter for uint256;\\n\\n    //State Variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n    // Events (we have none!)\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    /**\\n     *  @notice This function funds the contract\\n     *  @dev  This function allows users to fund\\n     */\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getFundersAmount(address _funders) public view returns (uint256) {\\n        return s_addressToAmountFunded[_funders];\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\\n// Functions Order:\\n//// constructor\\n//// receive\\n//// fallback\\n//// external\\n//// public\\n//// internal\\n//// private\\n//// view / pure\\n\",\"keccak256\":\"0xaabc1d8c78c3d3d430595651a8d2338b948ea3c3c0690f124c3637415f55e2f6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n}\\n\\n// library PriceConverter {\\n//     // We could make this public, but then we'd have to deploy it\\n//     function getPrice() internal view returns (uint256) {\\n//         // Goerli ETH / USD Address\\n//         // https://docs.chain.link/docs/ethereum-addresses/\\n//         AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n//             0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n//         );\\n//         (, int256 answer, , , ) = priceFeed.latestRoundData();\\n//         // ETH/USD rate in 18 digit\\n//         return uint256(answer * 10000000000);\\n//         // or (Both will do the same thing)\\n//         // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n//     }\\n\\n//     // 1000000000\\n//     function getConversionRate(\\n//         uint256 ethAmount\\n//     ) internal view returns (uint256) {\\n//         uint256 ethPrice = getPrice();\\n//         uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n//         return ethAmountInUsd;\\n//     }\\n\\n// }\\n\",\"keccak256\":\"0xc24cf56a50eeb7878ac1a883b97964f4b0d7d340721e1e73f07fa9d7cfbc497f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200135b3803806200135b833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111ce6200018d600039600081816101d101528181610420015281816105aa015281816107a001526108b601526111ce6000f3fe6080604052600436106100865760003560e01c8063b60d428811610059578063b60d428814610116578063be2693f014610120578063d7b4750c1461012a578063dba6335f14610167578063e5dab0b21461019257610086565b80633ccfd60b1461008b5780636b69a59214610095578063893d20e8146100c05780639e87a5cd146100eb575b600080fd5b6100936101cf565b005b3480156100a157600080fd5b506100aa61040f565b6040516100b79190610abc565b60405180910390f35b3480156100cc57600080fd5b506100d561041c565b6040516100e29190610b18565b60405180910390f35b3480156100f757600080fd5b50610100610444565b60405161010d9190610b92565b60405180910390f35b61011e61046e565b005b6101286105a8565b005b34801561013657600080fd5b50610151600480360381019061014c9190610bde565b61086c565b60405161015e9190610b18565b60405180910390f35b34801561017357600080fd5b5061017c6108b4565b6040516101899190610b18565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b49190610c37565b6108d8565b6040516101c69190610abc565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610254576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102ff5760006001828154811061027a57610279610c64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102f790610cc2565b915050610257565b50600067ffffffffffffffff81111561031b5761031a610d0b565b5b6040519080825280602002602001820160405280156103495781602001602082028036833780820191505090505b506001908051906020019061035f9291906109fc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161038690610d6b565b60006040518083038185875af1925050503d80600081146103c3576040519150601f19603f3d011682016040523d82523d6000602084013e6103c8565b606091505b505090508061040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390610ddd565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104ad600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461092090919063ffffffff16565b10156104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590610e49565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053c9190610e69565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106b157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610667575b5050505050905060005b815181101561073b5760008282815181106106d9576106d8610c64565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073390610cc2565b9150506106bb565b50600067ffffffffffffffff81111561075757610756610d0b565b5b6040519080825280602002602001820160405280156107855781602001602082028036833780820191505090505b506001908051906020019061079b9291906109fc565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107e290610d6b565b60006040518083038185875af1925050503d806000811461081f576040519150601f19603f3d011682016040523d82523d6000602084013e610824565b606091505b5050905080610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f90610ddd565b60405180910390fd5b5050565b60006001828154811061088257610881610c64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008061092c8361095c565b90506000670de0b6b3a764000085836109459190610ebf565b61094f9190610f48565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109a557600080fd5b505afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190611006565b5050509150506402540be400816109f49190611081565b915050919050565b828054828255906000526020600020908101928215610a75579160200282015b82811115610a745782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a1c565b5b509050610a829190610a86565b5090565b5b80821115610a9f576000816000905550600101610a87565b5090565b6000819050919050565b610ab681610aa3565b82525050565b6000602082019050610ad16000830184610aad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0282610ad7565b9050919050565b610b1281610af7565b82525050565b6000602082019050610b2d6000830184610b09565b92915050565b6000819050919050565b6000610b58610b53610b4e84610ad7565b610b33565b610ad7565b9050919050565b6000610b6a82610b3d565b9050919050565b6000610b7c82610b5f565b9050919050565b610b8c81610b71565b82525050565b6000602082019050610ba76000830184610b83565b92915050565b600080fd5b610bbb81610aa3565b8114610bc657600080fd5b50565b600081359050610bd881610bb2565b92915050565b600060208284031215610bf457610bf3610bad565b5b6000610c0284828501610bc9565b91505092915050565b610c1481610af7565b8114610c1f57600080fd5b50565b600081359050610c3181610c0b565b92915050565b600060208284031215610c4d57610c4c610bad565b5b6000610c5b84828501610c22565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ccd82610aa3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d0057610cff610c93565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d55600083610d3a565b9150610d6082610d45565b600082019050919050565b6000610d7682610d48565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc7600b83610d80565b9150610dd282610d91565b602082019050919050565b60006020820190508181036000830152610df681610dba565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e33601b83610d80565b9150610e3e82610dfd565b602082019050919050565b60006020820190508181036000830152610e6281610e26565b9050919050565b6000610e7482610aa3565b9150610e7f83610aa3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb457610eb3610c93565b5b828201905092915050565b6000610eca82610aa3565b9150610ed583610aa3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0e57610f0d610c93565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f5382610aa3565b9150610f5e83610aa3565b925082610f6e57610f6d610f19565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f9881610f79565b8114610fa357600080fd5b50565b600081519050610fb581610f8f565b92915050565b6000819050919050565b610fce81610fbb565b8114610fd957600080fd5b50565b600081519050610feb81610fc5565b92915050565b60008151905061100081610bb2565b92915050565b600080600080600060a0868803121561102257611021610bad565b5b600061103088828901610fa6565b955050602061104188828901610fdc565b945050604061105288828901610ff1565b935050606061106388828901610ff1565b925050608061107488828901610fa6565b9150509295509295909350565b600061108c82610fbb565b915061109783610fbb565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110d6576110d5610c93565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561111357611112610c93565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111505761114f610c93565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561118d5761118c610c93565b5b82820290509291505056fea2646970667358221220a1d87149b8aa0ef5907f9545cd90a0f0aa762c5a2a15e90e54626eec1b7d1e4064736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063b60d428811610059578063b60d428814610116578063be2693f014610120578063d7b4750c1461012a578063dba6335f14610167578063e5dab0b21461019257610086565b80633ccfd60b1461008b5780636b69a59214610095578063893d20e8146100c05780639e87a5cd146100eb575b600080fd5b6100936101cf565b005b3480156100a157600080fd5b506100aa61040f565b6040516100b79190610abc565b60405180910390f35b3480156100cc57600080fd5b506100d561041c565b6040516100e29190610b18565b60405180910390f35b3480156100f757600080fd5b50610100610444565b60405161010d9190610b92565b60405180910390f35b61011e61046e565b005b6101286105a8565b005b34801561013657600080fd5b50610151600480360381019061014c9190610bde565b61086c565b60405161015e9190610b18565b60405180910390f35b34801561017357600080fd5b5061017c6108b4565b6040516101899190610b18565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b49190610c37565b6108d8565b6040516101c69190610abc565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610254576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102ff5760006001828154811061027a57610279610c64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102f790610cc2565b915050610257565b50600067ffffffffffffffff81111561031b5761031a610d0b565b5b6040519080825280602002602001820160405280156103495781602001602082028036833780820191505090505b506001908051906020019061035f9291906109fc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161038690610d6b565b60006040518083038185875af1925050503d80600081146103c3576040519150601f19603f3d011682016040523d82523d6000602084013e6103c8565b606091505b505090508061040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390610ddd565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104ad600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461092090919063ffffffff16565b10156104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590610e49565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053c9190610e69565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106b157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610667575b5050505050905060005b815181101561073b5760008282815181106106d9576106d8610c64565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073390610cc2565b9150506106bb565b50600067ffffffffffffffff81111561075757610756610d0b565b5b6040519080825280602002602001820160405280156107855781602001602082028036833780820191505090505b506001908051906020019061079b9291906109fc565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107e290610d6b565b60006040518083038185875af1925050503d806000811461081f576040519150601f19603f3d011682016040523d82523d6000602084013e610824565b606091505b5050905080610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f90610ddd565b60405180910390fd5b5050565b60006001828154811061088257610881610c64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008061092c8361095c565b90506000670de0b6b3a764000085836109459190610ebf565b61094f9190610f48565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109a557600080fd5b505afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190611006565b5050509150506402540be400816109f49190611081565b915050919050565b828054828255906000526020600020908101928215610a75579160200282015b82811115610a745782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a1c565b5b509050610a829190610a86565b5090565b5b80821115610a9f576000816000905550600101610a87565b5090565b6000819050919050565b610ab681610aa3565b82525050565b6000602082019050610ad16000830184610aad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0282610ad7565b9050919050565b610b1281610af7565b82525050565b6000602082019050610b2d6000830184610b09565b92915050565b6000819050919050565b6000610b58610b53610b4e84610ad7565b610b33565b610ad7565b9050919050565b6000610b6a82610b3d565b9050919050565b6000610b7c82610b5f565b9050919050565b610b8c81610b71565b82525050565b6000602082019050610ba76000830184610b83565b92915050565b600080fd5b610bbb81610aa3565b8114610bc657600080fd5b50565b600081359050610bd881610bb2565b92915050565b600060208284031215610bf457610bf3610bad565b5b6000610c0284828501610bc9565b91505092915050565b610c1481610af7565b8114610c1f57600080fd5b50565b600081359050610c3181610c0b565b92915050565b600060208284031215610c4d57610c4c610bad565b5b6000610c5b84828501610c22565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ccd82610aa3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d0057610cff610c93565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d55600083610d3a565b9150610d6082610d45565b600082019050919050565b6000610d7682610d48565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc7600b83610d80565b9150610dd282610d91565b602082019050919050565b60006020820190508181036000830152610df681610dba565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e33601b83610d80565b9150610e3e82610dfd565b602082019050919050565b60006020820190508181036000830152610e6281610e26565b9050919050565b6000610e7482610aa3565b9150610e7f83610aa3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb457610eb3610c93565b5b828201905092915050565b6000610eca82610aa3565b9150610ed583610aa3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0e57610f0d610c93565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f5382610aa3565b9150610f5e83610aa3565b925082610f6e57610f6d610f19565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f9881610f79565b8114610fa357600080fd5b50565b600081519050610fb581610f8f565b92915050565b6000819050919050565b610fce81610fbb565b8114610fd957600080fd5b50565b600081519050610feb81610fc5565b92915050565b60008151905061100081610bb2565b92915050565b600080600080600060a0868803121561102257611021610bad565b5b600061103088828901610fa6565b955050602061104188828901610fdc565b945050604061105288828901610ff1565b935050606061106388828901610ff1565b925050608061107488828901610fa6565b9150509295509295909350565b600061108c82610fbb565b915061109783610fbb565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110d6576110d5610c93565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561111357611112610c93565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111505761114f610c93565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561118d5761118c610c93565b5b82820290509291505056fea2646970667358221220a1d87149b8aa0ef5907f9545cd90a0f0aa762c5a2a15e90e54626eec1b7d1e4064736f6c63430008080033",
  "devdoc": {
    "author": "BlockHunt",
    "details": "This implement price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This function allows users to fund"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds the contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}